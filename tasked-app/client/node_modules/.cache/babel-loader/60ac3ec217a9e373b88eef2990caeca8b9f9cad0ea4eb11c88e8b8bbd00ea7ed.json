{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ProjectList from './pages/ProjectList';\nimport KanbanBoard from './pages/KanbanBoard';\nimport TaskDetail from './pages/TaskDetail';\nimport ProjectSettings from './pages/ProjectSettings'; // <-- NEW IMPORT\nimport CreateTaskModal from './components/CreateTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [modalState, setModalState] = useState({\n    isOpen: false,\n    projectKey: '',\n    members: [],\n    statuses: [],\n    onTaskCreated: () => {}\n  });\n  const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\n    setModalState({\n      isOpen: true,\n      projectKey,\n      members,\n      statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'],\n      // Can fetch statuses too\n      onTaskCreated: fetchTasks // Function to refresh the board after creation\n    });\n  };\n  const handleCloseCreateModal = () => {\n    setModalState(prev => ({\n      ...prev,\n      isOpen: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/project/:projectKey/board\",\n        element: /*#__PURE__*/_jsxDEV(KanbanBoard, {\n          onOpenCreateModal: handleOpenCreateModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/project/:projectKey/settings\",\n        element: /*#__PURE__*/_jsxDEV(ProjectSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 30\n        }, this) // <-- NOW USES THE IMPORTED COMPONENT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/project/:projectKey/board/:taskId\",\n        element: /*#__PURE__*/_jsxDEV(TaskDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      isOpen: modalState.isOpen,\n      onClose: handleCloseCreateModal,\n      onTaskCreated: modalState.onTaskCreated,\n      projectKey: modalState.projectKey,\n      projectMembers: modalState.members,\n      statuses: modalState.statuses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"07J4LaKH6PQQaINfR5Sb5hiC84w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","ProjectList","KanbanBoard","TaskDetail","ProjectSettings","CreateTaskModal","jsxDEV","_jsxDEV","App","_s","modalState","setModalState","isOpen","projectKey","members","statuses","onTaskCreated","handleOpenCreateModal","fetchTasks","handleCloseCreateModal","prev","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onOpenCreateModal","onClose","projectMembers","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport ProjectList from './pages/ProjectList';\r\nimport KanbanBoard from './pages/KanbanBoard';\r\nimport TaskDetail from './pages/TaskDetail';\r\nimport ProjectSettings from './pages/ProjectSettings'; // <-- NEW IMPORT\r\nimport CreateTaskModal from './components/CreateTaskModal';\r\n\r\nfunction App() {\r\n    const [modalState, setModalState] = useState({\r\n        isOpen: false,\r\n        projectKey: '',\r\n        members: [],\r\n        statuses: [],\r\n        onTaskCreated: () => { }\r\n    });\r\n\r\n    const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\r\n        setModalState({\r\n            isOpen: true,\r\n            projectKey,\r\n            members,\r\n            statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'], // Can fetch statuses too\r\n            onTaskCreated: fetchTasks // Function to refresh the board after creation\r\n        });\r\n    };\r\n\r\n    const handleCloseCreateModal = () => {\r\n        setModalState(prev => ({ ...prev, isOpen: false }));\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                {/* 1. Project Selection Page (Home) */}\r\n                <Route path=\"/\" element={<ProjectList />} />\r\n\r\n                {/* 2. Main Board View for a Specific Project */}\r\n                <Route\r\n                    path=\"/project/:projectKey/board\"\r\n                    element={<KanbanBoard onOpenCreateModal={handleOpenCreateModal} />}\r\n                />\r\n\r\n                {/* 3. Project Settings/Members Page (Fixed) */}\r\n                <Route\r\n                    path=\"/project/:projectKey/settings\"\r\n                    element={<ProjectSettings />} // <-- NOW USES THE IMPORTED COMPONENT\r\n                />\r\n            </Routes>\r\n\r\n            {/* Route to show the TaskDetail Modal/Page over the Board */}\r\n            {/* NOTE: You should ideally only use one <Routes> block, but for modal routing, this pattern is often used */}\r\n            <Routes>\r\n                <Route path=\"/project/:projectKey/board/:taskId\" element={<TaskDetail />} />\r\n            </Routes>\r\n\r\n            {/* Global Create Task Modal */}\r\n            <CreateTaskModal\r\n                isOpen={modalState.isOpen}\r\n                onClose={handleCloseCreateModal}\r\n                onTaskCreated={modalState.onTaskCreated}\r\n                projectKey={modalState.projectKey}\r\n                projectMembers={modalState.members}\r\n                statuses={modalState.statuses}\r\n            />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}