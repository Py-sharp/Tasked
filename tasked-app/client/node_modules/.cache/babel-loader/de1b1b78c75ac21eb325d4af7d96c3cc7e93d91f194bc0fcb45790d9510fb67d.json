{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ProjectList from './pages/ProjectList';\nimport KanbanBoard from './pages/KanbanBoard';\nimport TaskDetail from './pages/TaskDetail';\nimport CreateTaskModal from './components/CreateTaskModal';\nimport ProjectSettings from './pages/ProjectSettings'; // 1. Import the actual component\nimport { NotificationProvider } from './context/NotificationContext'; // 2. Import the Notification Provider\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [modalState, setModalState] = useState({\n    isOpen: false,\n    projectKey: '',\n    members: [],\n    statuses: [],\n    onTaskCreated: () => {}\n  });\n  const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\n    setModalState({\n      isOpen: true,\n      projectKey,\n      members,\n      statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'],\n      onTaskCreated: fetchTasks // Function to refresh the board after creation\n    });\n  };\n  const handleCloseCreateModal = () => {\n    setModalState(prev => ({\n      ...prev,\n      isOpen: false\n    }));\n  };\n\n  // 3. Wrap the whole app in the NotificationProvider\n  return /*#__PURE__*/_jsxDEV(NotificationProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/project/:projectKey/board\",\n          element: /*#__PURE__*/_jsxDEV(KanbanBoard, {\n            onOpenCreateModal: handleOpenCreateModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/project/:projectKey/settings\",\n          element: /*#__PURE__*/_jsxDEV(ProjectSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/project/:projectKey/board/:taskId\",\n          element: /*#__PURE__*/_jsxDEV(TaskDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n        isOpen: modalState.isOpen,\n        onClose: handleCloseCreateModal,\n        onTaskCreated: modalState.onTaskCreated,\n        projectKey: modalState.projectKey,\n        projectMembers: modalState.members,\n        statuses: modalState.statuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"07J4LaKH6PQQaINfR5Sb5hiC84w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","ProjectList","KanbanBoard","TaskDetail","CreateTaskModal","ProjectSettings","NotificationProvider","jsxDEV","_jsxDEV","App","_s","modalState","setModalState","isOpen","projectKey","members","statuses","onTaskCreated","handleOpenCreateModal","fetchTasks","handleCloseCreateModal","prev","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onOpenCreateModal","onClose","projectMembers","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport ProjectList from './pages/ProjectList';\r\nimport KanbanBoard from './pages/KanbanBoard';\r\nimport TaskDetail from './pages/TaskDetail';\r\nimport CreateTaskModal from './components/CreateTaskModal';\r\nimport ProjectSettings from './pages/ProjectSettings'; // 1. Import the actual component\r\nimport { NotificationProvider } from './context/NotificationContext'; // 2. Import the Notification Provider\r\n\r\nfunction App() {\r\n    const [modalState, setModalState] = useState({\r\n        isOpen: false,\r\n        projectKey: '',\r\n        members: [],\r\n        statuses: [],\r\n        onTaskCreated: () => { }\r\n    });\r\n\r\n    const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\r\n        setModalState({\r\n            isOpen: true,\r\n            projectKey,\r\n            members,\r\n            statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'],\r\n            onTaskCreated: fetchTasks // Function to refresh the board after creation\r\n        });\r\n    };\r\n\r\n    const handleCloseCreateModal = () => {\r\n        setModalState(prev => ({ ...prev, isOpen: false }));\r\n    };\r\n\r\n    // 3. Wrap the whole app in the NotificationProvider\r\n    return (\r\n        <NotificationProvider>\r\n            <Router>\r\n                <Routes>\r\n                    {/* 1. Project Selection Page (Home) */}\r\n                    <Route path=\"/\" element={<ProjectList />} />\r\n\r\n                    {/* 2. Main Board View for a Specific Project */}\r\n                    <Route\r\n                        path=\"/project/:projectKey/board\"\r\n                        element={<KanbanBoard onOpenCreateModal={handleOpenCreateModal} />}\r\n                    />\r\n\r\n                    {/* 3. Project Settings/Members Page - NOW USING THE REAL COMPONENT */}\r\n                    <Route\r\n                        path=\"/project/:projectKey/settings\"\r\n                        element={<ProjectSettings />}\r\n                    />\r\n                </Routes>\r\n\r\n                {/* Route to show the TaskDetail Modal/Page over the Board */}\r\n                <Routes>\r\n                    <Route path=\"/project/:projectKey/board/:taskId\" element={<TaskDetail />} />\r\n                </Routes>\r\n\r\n                {/* Global Create Task Modal */}\r\n                <CreateTaskModal\r\n                    isOpen={modalState.isOpen}\r\n                    onClose={handleCloseCreateModal}\r\n                    onTaskCreated={modalState.onTaskCreated}\r\n                    projectKey={modalState.projectKey}\r\n                    projectMembers={modalState.members}\r\n                    statuses={modalState.statuses}\r\n                />\r\n            </Router>\r\n        </NotificationProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}