{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\components\\\\BoardColumn.js\";\n// src/components/BoardColumn.js\nimport React from 'react';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardColumn = ({\n  projectKey,\n  status,\n  tasks,\n  onDragStart,\n  onDragOver,\n  onDrop\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: onDragOver,\n    onDrop: e => onDrop(e, status),\n    style: styles.column,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: styles.header,\n      children: [status, \" (\", tasks.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.cardContainer,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        projectKey: projectKey,\n        task: task,\n        onDragStart: onDragStart\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = BoardColumn;\nconst styles = {\n  column: {\n    minWidth: '300px',\n    // Wider columns\n    maxWidth: '300px',\n    marginRight: '8px',\n    backgroundColor: '#ebecf0',\n    // Slightly lighter background for the column\n    borderRadius: '4px',\n    // Softer corners\n    padding: '12px',\n    // More padding\n    flexShrink: 0,\n    height: 'fit-content',\n    boxShadow: '0 1px 3px rgba(9,30,66,.05)' // Subtle shadow\n  },\n  header: {\n    fontSize: '14px',\n    fontWeight: '600',\n    padding: '4px 0',\n    margin: '0 0 10px 0',\n    color: '#5e6c84',\n    // Less aggressive header color\n    textTransform: 'uppercase'\n  },\n  cardContainer: {\n    minHeight: '10px'\n  }\n};\nexport default BoardColumn;\nvar _c;\n$RefreshReg$(_c, \"BoardColumn\");","map":{"version":3,"names":["React","TaskCard","jsxDEV","_jsxDEV","BoardColumn","projectKey","status","tasks","onDragStart","onDragOver","onDrop","e","style","styles","column","children","header","length","fileName","_jsxFileName","lineNumber","columnNumber","cardContainer","map","task","id","_c","minWidth","maxWidth","marginRight","backgroundColor","borderRadius","padding","flexShrink","height","boxShadow","fontSize","fontWeight","margin","color","textTransform","minHeight","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/components/BoardColumn.js"],"sourcesContent":["// src/components/BoardColumn.js\r\nimport React from 'react';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst BoardColumn = ({ projectKey, status, tasks, onDragStart, onDragOver, onDrop }) => {\r\n    return (\r\n        <div\r\n            onDragOver={onDragOver}\r\n            onDrop={(e) => onDrop(e, status)}\r\n            style={styles.column}\r\n        >\r\n            <h3 style={styles.header}>{status} ({tasks.length})</h3>\r\n            <div style={styles.cardContainer}>\r\n                {tasks.map(task => (\r\n                    <TaskCard\r\n                        key={task.id}\r\n                        projectKey={projectKey}\r\n                        task={task}\r\n                        onDragStart={onDragStart}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    column: {\r\n        minWidth: '300px', // Wider columns\r\n        maxWidth: '300px',\r\n        marginRight: '8px',\r\n        backgroundColor: '#ebecf0', // Slightly lighter background for the column\r\n        borderRadius: '4px', // Softer corners\r\n        padding: '12px', // More padding\r\n        flexShrink: 0,\r\n        height: 'fit-content',\r\n        boxShadow: '0 1px 3px rgba(9,30,66,.05)' // Subtle shadow\r\n    },\r\n    header: {\r\n        fontSize: '14px',\r\n        fontWeight: '600',\r\n        padding: '4px 0',\r\n        margin: '0 0 10px 0',\r\n        color: '#5e6c84', // Less aggressive header color\r\n        textTransform: 'uppercase'\r\n    },\r\n    cardContainer: {\r\n        minHeight: '10px'\r\n    }\r\n};\r\n\r\nexport default BoardColumn;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,MAAM;EAAEC,KAAK;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EACpF,oBACIP,OAAA;IACIM,UAAU,EAAEA,UAAW;IACvBC,MAAM,EAAGC,CAAC,IAAKD,MAAM,CAACC,CAAC,EAAEL,MAAM,CAAE;IACjCM,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,gBAErBZ,OAAA;MAAIS,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GAAET,MAAM,EAAC,IAAE,EAACC,KAAK,CAACU,MAAM,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDlB,OAAA;MAAKS,KAAK,EAAEC,MAAM,CAACS,aAAc;MAAAP,QAAA,EAC5BR,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACXrB,OAAA,CAACF,QAAQ;QAELI,UAAU,EAAEA,UAAW;QACvBmB,IAAI,EAAEA,IAAK;QACXhB,WAAW,EAAEA;MAAY,GAHpBgB,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACK,EAAA,GApBItB,WAAW;AAsBjB,MAAMS,MAAM,GAAG;EACXC,MAAM,EAAE;IACJa,QAAQ,EAAE,OAAO;IAAE;IACnBC,QAAQ,EAAE,OAAO;IACjBC,WAAW,EAAE,KAAK;IAClBC,eAAe,EAAE,SAAS;IAAE;IAC5BC,YAAY,EAAE,KAAK;IAAE;IACrBC,OAAO,EAAE,MAAM;IAAE;IACjBC,UAAU,EAAE,CAAC;IACbC,MAAM,EAAE,aAAa;IACrBC,SAAS,EAAE,6BAA6B,CAAC;EAC7C,CAAC;EACDnB,MAAM,EAAE;IACJoB,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,KAAK;IACjBL,OAAO,EAAE,OAAO;IAChBM,MAAM,EAAE,YAAY;IACpBC,KAAK,EAAE,SAAS;IAAE;IAClBC,aAAa,EAAE;EACnB,CAAC;EACDlB,aAAa,EAAE;IACXmB,SAAS,EAAE;EACf;AACJ,CAAC;AAED,eAAerC,WAAW;AAAC,IAAAsB,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}