{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\pages\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// src/pages/ProjectList.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProjects, getAllUsers } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchData = useCallback(async () => {\n    const [projResponse, userResponse] = await Promise.all([getProjects(), getAllUsers()]);\n    setProjects(projResponse.data);\n    setUsers(userResponse.data);\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const getUserName = id => {\n    const user = users.find(u => u.id === id);\n    return user ? user.name : 'Unknown';\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.loading,\n    children: \"Loading Projects...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.header,\n      children: \"All Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.grid,\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/project/${project.key}/board`,\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.name,\n          children: [project.name, \" (\", project.key, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.detail,\n          children: [\"Type: \", project.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.detail,\n          children: [\"Manager: \", getUserName(project.managerId)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.detail,\n          children: [\"Members: \", project.memberIds.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.createButton,\n      onClick: () => alert('Future: Open Create Project Modal to define Name, Type, and Project Manager'),\n      children: \"+ Create New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectList, \"ISYPUlaxwDw5VQ3oMBwGtVmrD6U=\");\n_c = ProjectList;\nconst styles = {\n  container: {\n    padding: '20px',\n    backgroundColor: '#ebecf0',\n    minHeight: '100vh'\n  },\n  header: {\n    color: '#172b4d',\n    marginBottom: '20px'\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: '20px'\n  },\n  card: {\n    display: 'block',\n    backgroundColor: 'white',\n    padding: '15px',\n    borderRadius: '5px',\n    boxShadow: '0 1px 0 rgba(9,30,66,.25)',\n    textDecoration: 'none',\n    color: '#172b4d',\n    transition: 'transform 0.1s'\n  },\n  name: {\n    margin: '0 0 5px 0',\n    fontSize: '18px'\n  },\n  detail: {\n    margin: '0',\n    fontSize: '14px',\n    color: '#5e6c84'\n  },\n  createButton: {\n    marginTop: '30px',\n    padding: '10px 20px',\n    backgroundColor: '#0052cc',\n    color: 'white',\n    border: 'none',\n    borderRadius: '3px',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n  },\n  loading: {\n    padding: '50px',\n    textAlign: 'center'\n  }\n};\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","getProjects","getAllUsers","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","users","setUsers","isLoading","setIsLoading","fetchData","projResponse","userResponse","Promise","all","data","getUserName","id","user","find","u","name","style","styles","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","container","header","grid","map","project","to","key","card","detail","type","managerId","memberIds","length","createButton","onClick","alert","_c","padding","backgroundColor","minHeight","color","marginBottom","display","gridTemplateColumns","gap","borderRadius","boxShadow","textDecoration","transition","margin","fontSize","marginTop","border","cursor","fontWeight","textAlign","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/pages/ProjectList.js"],"sourcesContent":["// src/pages/ProjectList.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProjects, getAllUsers } from '../services/api';\r\n\r\nconst ProjectList = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const [projResponse, userResponse] = await Promise.all([getProjects(), getAllUsers()]);\r\n        setProjects(projResponse.data);\r\n        setUsers(userResponse.data);\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    const getUserName = (id) => {\r\n        const user = users.find(u => u.id === id);\r\n        return user ? user.name : 'Unknown';\r\n    };\r\n\r\n    if (isLoading) return <div style={styles.loading}>Loading Projects...</div>;\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.header}>All Projects</h1>\r\n            <div style={styles.grid}>\r\n                {projects.map(project => (\r\n                    <Link to={`/project/${project.key}/board`} key={project.id} style={styles.card}>\r\n                        <h3 style={styles.name}>{project.name} ({project.key})</h3>\r\n                        <p style={styles.detail}>Type: {project.type}</p>\r\n                        <p style={styles.detail}>Manager: {getUserName(project.managerId)}</p>\r\n                        <p style={styles.detail}>Members: {project.memberIds.length}</p>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n            <button style={styles.createButton} onClick={() => alert('Future: Open Create Project Modal to define Name, Type, and Project Manager')}>\r\n                + Create New Project\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: { padding: '20px', backgroundColor: '#ebecf0', minHeight: '100vh' },\r\n    header: { color: '#172b4d', marginBottom: '20px' },\r\n    grid: { display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: '20px' },\r\n    card: { display: 'block', backgroundColor: 'white', padding: '15px', borderRadius: '5px', boxShadow: '0 1px 0 rgba(9,30,66,.25)', textDecoration: 'none', color: '#172b4d', transition: 'transform 0.1s' },\r\n    name: { margin: '0 0 5px 0', fontSize: '18px' },\r\n    detail: { margin: '0', fontSize: '14px', color: '#5e6c84' },\r\n    createButton: { marginTop: '30px', padding: '10px 20px', backgroundColor: '#0052cc', color: 'white', border: 'none', borderRadius: '3px', cursor: 'pointer', fontWeight: 'bold' },\r\n    loading: { padding: '50px', textAlign: 'center' }\r\n};\r\n\r\nexport default ProjectList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}