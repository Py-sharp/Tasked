{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\context\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/NotificationContext.js\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\n\n// Hook for using the notification context\nexport const useNotification = () => {\n  _s();\n  return useContext(NotificationContext);\n};\n\n// Notification Component (Toast)\n_s(useNotification, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst Notification = ({\n  message,\n  type,\n  id,\n  onDismiss\n}) => {\n  const style = {\n    padding: '12px 20px',\n    margin: '5px 0',\n    borderRadius: '5px',\n    color: 'white',\n    backgroundColor: type === 'error' ? '#ff5630' : '#36b37e',\n    // Red for error, Green for success\n    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    opacity: 1,\n    transition: 'opacity 0.5s ease-out',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    onClick: () => onDismiss(id),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '15px',\n        fontWeight: 'bold'\n      },\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n// Provider Component\n_c = Notification;\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = useCallback((message, type = 'success', duration = 5000) => {\n    const id = Date.now();\n    const newNotification = {\n      id,\n      message,\n      type\n    };\n\n    // Add the new notification\n    setNotifications(prev => [...prev, newNotification]);\n\n    // Automatically dismiss after duration\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, duration);\n  }, []);\n  const dismissNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  }, []);\n  const styles = {\n    container: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      zIndex: 2000,\n      display: 'flex',\n      flexDirection: 'column-reverse',\n      // Newest message on bottom\n      gap: '10px'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      showNotification\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: notifications.map(n => /*#__PURE__*/_jsxDEV(Notification, {\n        ...n,\n        onDismiss: dismissNotification\n      }, n.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s2(NotificationProvider, \"QEvsv/8Xmw2Ct0Q2RdmzkTUHgbo=\");\n_c2 = NotificationProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","NotificationContext","useNotification","_s","Notification","message","type","id","onDismiss","style","padding","margin","borderRadius","color","backgroundColor","boxShadow","display","justifyContent","alignItems","opacity","transition","cursor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","fontWeight","_c","NotificationProvider","_s2","notifications","setNotifications","showNotification","duration","Date","now","newNotification","prev","setTimeout","filter","n","dismissNotification","styles","container","position","bottom","right","zIndex","flexDirection","gap","Provider","value","map","_c2","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/context/NotificationContext.js"],"sourcesContent":["// src/context/NotificationContext.js\r\nimport React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst NotificationContext = createContext();\r\n\r\n// Hook for using the notification context\r\nexport const useNotification = () => useContext(NotificationContext);\r\n\r\n// Notification Component (Toast)\r\nconst Notification = ({ message, type, id, onDismiss }) => {\r\n    const style = {\r\n        padding: '12px 20px',\r\n        margin: '5px 0',\r\n        borderRadius: '5px',\r\n        color: 'white',\r\n        backgroundColor: type === 'error' ? '#ff5630' : '#36b37e', // Red for error, Green for success\r\n        boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        opacity: 1,\r\n        transition: 'opacity 0.5s ease-out',\r\n        cursor: 'pointer'\r\n    };\r\n\r\n    return (\r\n        <div style={style} onClick={() => onDismiss(id)}>\r\n            <span>{message}</span>\r\n            <span style={{ marginLeft: '15px', fontWeight: 'bold' }}>&times;</span>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Provider Component\r\nexport const NotificationProvider = ({ children }) => {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const showNotification = useCallback((message, type = 'success', duration = 5000) => {\r\n        const id = Date.now();\r\n        const newNotification = { id, message, type };\r\n\r\n        // Add the new notification\r\n        setNotifications(prev => [...prev, newNotification]);\r\n\r\n        // Automatically dismiss after duration\r\n        setTimeout(() => {\r\n            setNotifications(prev => prev.filter(n => n.id !== id));\r\n        }, duration);\r\n    }, []);\r\n\r\n    const dismissNotification = useCallback((id) => {\r\n        setNotifications(prev => prev.filter(n => n.id !== id));\r\n    }, []);\r\n\r\n    const styles = {\r\n        container: {\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            zIndex: 2000,\r\n            display: 'flex',\r\n            flexDirection: 'column-reverse', // Newest message on bottom\r\n            gap: '10px',\r\n        }\r\n    };\r\n\r\n    return (\r\n        <NotificationContext.Provider value={{ showNotification }}>\r\n            {children}\r\n            <div style={styles.container}>\r\n                {notifications.map(n => (\r\n                    <Notification\r\n                        key={n.id}\r\n                        {...n}\r\n                        onDismiss={dismissNotification}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </NotificationContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}