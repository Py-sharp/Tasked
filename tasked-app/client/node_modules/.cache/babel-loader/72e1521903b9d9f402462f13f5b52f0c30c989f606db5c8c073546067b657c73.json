{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { NotificationProvider } from './context/NotificationContext'; // NEW: Import NotificationProvider\nimport ProjectList from './pages/ProjectList';\nimport KanbanBoard from './pages/KanbanBoard';\nimport TaskDetail from './pages/TaskDetail';\nimport CreateTaskModal from './components/CreateTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [modalState, setModalState] = useState({\n    isOpen: false,\n    projectKey: '',\n    members: [],\n    statuses: [],\n    onTaskCreated: () => {}\n  });\n  const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\n    setModalState({\n      isOpen: true,\n      projectKey,\n      members,\n      statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'],\n      // Can fetch statuses too\n      onTaskCreated: fetchTasks // Function to refresh the board after creation\n    });\n  };\n  const handleCloseCreateModal = () => {\n    setModalState(prev => ({\n      ...prev,\n      isOpen: false\n    }));\n  };\n  return (\n    /*#__PURE__*/\n    // NEW: Wrap the entire application in the Notification Provider\n    _jsxDEV(NotificationProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/project/:projectKey/board\",\n            element: /*#__PURE__*/_jsxDEV(KanbanBoard, {\n              onOpenCreateModal: handleOpenCreateModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/project/:projectKey/settings\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '50px'\n              },\n              children: [\"Project **\", \":projectKey\", \"** Settings: This is where you would **Add/Remove Users** and **Assign Project Managers**.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/project/:projectKey/board/:taskId\",\n            element: /*#__PURE__*/_jsxDEV(TaskDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n          isOpen: modalState.isOpen,\n          onClose: handleCloseCreateModal,\n          onTaskCreated: modalState.onTaskCreated,\n          projectKey: modalState.projectKey,\n          projectMembers: modalState.members,\n          statuses: modalState.statuses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"07J4LaKH6PQQaINfR5Sb5hiC84w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","NotificationProvider","ProjectList","KanbanBoard","TaskDetail","CreateTaskModal","jsxDEV","_jsxDEV","App","_s","modalState","setModalState","isOpen","projectKey","members","statuses","onTaskCreated","handleOpenCreateModal","fetchTasks","handleCloseCreateModal","prev","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onOpenCreateModal","style","padding","onClose","projectMembers","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { NotificationProvider } from './context/NotificationContext'; // NEW: Import NotificationProvider\r\nimport ProjectList from './pages/ProjectList';\r\nimport KanbanBoard from './pages/KanbanBoard';\r\nimport TaskDetail from './pages/TaskDetail';\r\nimport CreateTaskModal from './components/CreateTaskModal';\r\n\r\nfunction App() {\r\n    const [modalState, setModalState] = useState({\r\n        isOpen: false,\r\n        projectKey: '',\r\n        members: [],\r\n        statuses: [],\r\n        onTaskCreated: () => { }\r\n    });\r\n\r\n    const handleOpenCreateModal = (projectKey, members, fetchTasks) => {\r\n        setModalState({\r\n            isOpen: true,\r\n            projectKey,\r\n            members,\r\n            statuses: ['To Do', 'In Progress', 'Done', 'Review', 'Blocked'], // Can fetch statuses too\r\n            onTaskCreated: fetchTasks // Function to refresh the board after creation\r\n        });\r\n    };\r\n\r\n    const handleCloseCreateModal = () => {\r\n        setModalState(prev => ({ ...prev, isOpen: false }));\r\n    };\r\n\r\n    return (\r\n        // NEW: Wrap the entire application in the Notification Provider\r\n        <NotificationProvider>\r\n            <Router>\r\n                <Routes>\r\n                    {/* 1. Project Selection Page (Home) */}\r\n                    <Route path=\"/\" element={<ProjectList />} />\r\n\r\n                    {/* 2. Main Board View for a Specific Project */}\r\n                    <Route\r\n                        path=\"/project/:projectKey/board\"\r\n                        element={<KanbanBoard onOpenCreateModal={handleOpenCreateModal} />}\r\n                    />\r\n\r\n                    {/* 3. Placeholder for Project Settings/Members Page */}\r\n                    <Route\r\n                        path=\"/project/:projectKey/settings\"\r\n                        element={<div style={{ padding: '50px' }}>Project **{\":projectKey\"}** Settings: This is where you would **Add/Remove Users** and **Assign Project Managers**.</div>}\r\n                    />\r\n                </Routes>\r\n\r\n                {/* Route to show the TaskDetail Modal/Page over the Board */}\r\n                <Routes>\r\n                    <Route path=\"/project/:projectKey/board/:taskId\" element={<TaskDetail />} />\r\n                </Routes>\r\n\r\n                {/* Global Create Task Modal */}\r\n                <CreateTaskModal\r\n                    isOpen={modalState.isOpen}\r\n                    onClose={handleCloseCreateModal}\r\n                    onTaskCreated={modalState.onTaskCreated}\r\n                    projectKey={modalState.projectKey}\r\n                    projectMembers={modalState.members}\r\n                    statuses={modalState.statuses}\r\n                />\r\n            </Router>\r\n        </NotificationProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}