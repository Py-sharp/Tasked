{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\tasked-frontend\\\\tasked-app\\\\client\\\\src\\\\pages\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\n// src/pages/KanbanBoard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport BoardColumn from '../components/BoardColumn';\nimport { getProjectDetails, updateTask } from '../services/api';\nimport { useNotification } from '../context/NotificationContext'; // Added for drag/drop notifications\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  onOpenCreateModal\n}) => {\n  _s();\n  const {\n    projectKey\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [members, setMembers] = useState([]); // Members for Create Task Modal\n  const [isLoading, setIsLoading] = useState(true);\n  const [draggedTaskId, setDraggedTaskId] = useState(null);\n  const {\n    showNotification\n  } = useNotification();\n  const fetchTasks = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await getProjectDetails(projectKey.toUpperCase());\n      if (response.data) {\n        setProject(response.data);\n        setTasks(response.data.tasks);\n        setStatuses(response.statuses);\n        setMembers(response.members);\n      } else {\n        setProject(null); // Project not found\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch project details:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [projectKey]);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  // Drag and Drop Handlers\n  const handleDragStart = (e, taskId) => {\n    setDraggedTaskId(taskId);\n    e.dataTransfer.setData('taskId', taskId);\n  };\n  const handleDragOver = e => {\n    e.preventDefault(); // Necessary to allow a drop\n  };\n  const handleDrop = async (e, newStatus) => {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData('taskId');\n    setDraggedTaskId(null);\n    const taskToUpdate = tasks.find(t => t.id === taskId);\n    if (!taskToUpdate || taskToUpdate.status === newStatus) return;\n\n    // Optimistic UI update\n    setTasks(prevTasks => prevTasks.map(t => t.id === taskId ? {\n      ...t,\n      status: newStatus\n    } : t));\n    try {\n      await updateTask(projectKey.toUpperCase(), taskId, {\n        status: newStatus\n      });\n      showNotification(`Task ${taskId} moved to ${newStatus}.`, 'success');\n    } catch (error) {\n      console.error(\"Error updating task status:\", error);\n      showNotification(`Failed to move task ${taskId}. Please try again.`, 'error');\n      // Revert on error\n      fetchTasks();\n    }\n  };\n  const tasksByStatus = tasks.reduce((acc, task) => {\n    if (!acc[task.status]) {\n      acc[task.status] = [];\n    }\n    acc[task.status].push(task);\n    return acc;\n  }, {});\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.loading,\n    children: \"Loading Kanban Board...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 27\n  }, this);\n  if (!project) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.error,\n    children: [\"Project \\\"\", projectKey.toUpperCase(), \"\\\" not found.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.boardView,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.projectTitle,\n        children: [project.name, \" (\", project.key, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/project/${projectKey}/settings`,\n          style: styles.settingsLink,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.createButton,\n          onClick: () => onOpenCreateModal(project.key, members, fetchTasks) // Pass data and re-fetch func\n          ,\n          children: \"+ Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.boardContainer,\n      children: statuses.map(status => /*#__PURE__*/_jsxDEV(BoardColumn, {\n        projectKey: projectKey,\n        status: status,\n        tasks: tasksByStatus[status] || [],\n        onDragStart: handleDragStart,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(KanbanBoard, \"xf5qaitdtkGHavNLS0WfLtrOS3M=\", false, function () {\n  return [useParams, useNotification];\n});\n_c = KanbanBoard;\nconst styles = {\n  boardView: {\n    padding: '20px',\n    backgroundColor: '#ebecf0',\n    minHeight: '100vh'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px'\n  },\n  projectTitle: {\n    margin: 0,\n    color: '#172b4d'\n  },\n  actions: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '15px'\n  },\n  boardContainer: {\n    display: 'flex',\n    overflowX: 'auto',\n    paddingBottom: '10px'\n  },\n  createButton: {\n    padding: '8px 15px',\n    backgroundColor: '#0052cc',\n    color: 'white',\n    border: 'none',\n    borderRadius: '3px',\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    transition: 'background-color 0.2s'\n  },\n  settingsLink: {\n    padding: '8px 15px',\n    backgroundColor: '#f4f5f7',\n    color: '#172b4d',\n    border: '1px solid #ccc',\n    borderRadius: '3px',\n    textDecoration: 'none',\n    fontWeight: 'bold',\n    fontSize: '14px',\n    transition: 'background-color 0.2s'\n  },\n  loading: {\n    padding: '20px',\n    fontSize: '18px',\n    color: '#5e6c84'\n  },\n  error: {\n    padding: '20px',\n    fontSize: '18px',\n    color: '#ff5630'\n  }\n};\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Link","BoardColumn","getProjectDetails","updateTask","useNotification","jsxDEV","_jsxDEV","KanbanBoard","onOpenCreateModal","_s","projectKey","project","setProject","tasks","setTasks","statuses","setStatuses","members","setMembers","isLoading","setIsLoading","draggedTaskId","setDraggedTaskId","showNotification","fetchTasks","response","toUpperCase","data","error","console","handleDragStart","e","taskId","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","newStatus","getData","taskToUpdate","find","t","id","status","prevTasks","map","tasksByStatus","reduce","acc","task","push","style","styles","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","boardView","header","projectTitle","name","key","actions","to","settingsLink","createButton","onClick","boardContainer","onDragStart","onDragOver","onDrop","_c","padding","backgroundColor","minHeight","display","justifyContent","alignItems","marginBottom","margin","color","gap","overflowX","paddingBottom","border","borderRadius","cursor","fontWeight","transition","textDecoration","fontSize","$RefreshReg$"],"sources":["C:/Users/User/Downloads/tasked-frontend/tasked-app/client/src/pages/KanbanBoard.js"],"sourcesContent":["// src/pages/KanbanBoard.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport BoardColumn from '../components/BoardColumn';\r\nimport { getProjectDetails, updateTask } from '../services/api';\r\nimport { useNotification } from '../context/NotificationContext'; // Added for drag/drop notifications\r\n\r\nconst KanbanBoard = ({ onOpenCreateModal }) => {\r\n    const { projectKey } = useParams();\r\n    const [project, setProject] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [members, setMembers] = useState([]); // Members for Create Task Modal\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [draggedTaskId, setDraggedTaskId] = useState(null);\r\n    const { showNotification } = useNotification();\r\n\r\n    const fetchTasks = useCallback(async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await getProjectDetails(projectKey.toUpperCase());\r\n            if (response.data) {\r\n                setProject(response.data);\r\n                setTasks(response.data.tasks);\r\n                setStatuses(response.statuses);\r\n                setMembers(response.members);\r\n            } else {\r\n                setProject(null); // Project not found\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch project details:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [projectKey]);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [fetchTasks]);\r\n\r\n    // Drag and Drop Handlers\r\n    const handleDragStart = (e, taskId) => {\r\n        setDraggedTaskId(taskId);\r\n        e.dataTransfer.setData('taskId', taskId);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault(); // Necessary to allow a drop\r\n    };\r\n\r\n    const handleDrop = async (e, newStatus) => {\r\n        e.preventDefault();\r\n        const taskId = e.dataTransfer.getData('taskId');\r\n        setDraggedTaskId(null);\r\n\r\n        const taskToUpdate = tasks.find(t => t.id === taskId);\r\n        if (!taskToUpdate || taskToUpdate.status === newStatus) return;\r\n\r\n        // Optimistic UI update\r\n        setTasks(prevTasks => prevTasks.map(t =>\r\n            t.id === taskId ? { ...t, status: newStatus } : t\r\n        ));\r\n\r\n        try {\r\n            await updateTask(projectKey.toUpperCase(), taskId, { status: newStatus });\r\n            showNotification(`Task ${taskId} moved to ${newStatus}.`, 'success');\r\n        } catch (error) {\r\n            console.error(\"Error updating task status:\", error);\r\n            showNotification(`Failed to move task ${taskId}. Please try again.`, 'error');\r\n            // Revert on error\r\n            fetchTasks();\r\n        }\r\n    };\r\n\r\n    const tasksByStatus = tasks.reduce((acc, task) => {\r\n        if (!acc[task.status]) {\r\n            acc[task.status] = [];\r\n        }\r\n        acc[task.status].push(task);\r\n        return acc;\r\n    }, {});\r\n\r\n    if (isLoading) return <div style={styles.loading}>Loading Kanban Board...</div>;\r\n\r\n    if (!project) return <div style={styles.error}>Project \"{projectKey.toUpperCase()}\" not found.</div>;\r\n\r\n    return (\r\n        <div style={styles.boardView}>\r\n            <header style={styles.header}>\r\n                <h1 style={styles.projectTitle}>{project.name} ({project.key})</h1>\r\n\r\n                {/* Navigation and Actions */}\r\n                <div style={styles.actions}>\r\n                    {/* Project Settings Link (Made more prominent) */}\r\n                    <Link to={`/project/${projectKey}/settings`} style={styles.settingsLink}>\r\n                        Settings\r\n                    </Link>\r\n\r\n                    <button\r\n                        style={styles.createButton}\r\n                        onClick={() => onOpenCreateModal(project.key, members, fetchTasks)} // Pass data and re-fetch func\r\n                    >\r\n                        + Create Task\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div style={styles.boardContainer}>\r\n                {statuses.map(status => (\r\n                    <BoardColumn\r\n                        key={status}\r\n                        projectKey={projectKey}\r\n                        status={status}\r\n                        tasks={tasksByStatus[status] || []}\r\n                        onDragStart={handleDragStart}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={handleDrop}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    boardView: { padding: '20px', backgroundColor: '#ebecf0', minHeight: '100vh' },\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '20px'\r\n    },\r\n    projectTitle: { margin: 0, color: '#172b4d' },\r\n    actions: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '15px'\r\n    },\r\n    boardContainer: { display: 'flex', overflowX: 'auto', paddingBottom: '10px' },\r\n    createButton: {\r\n        padding: '8px 15px',\r\n        backgroundColor: '#0052cc',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '3px',\r\n        cursor: 'pointer',\r\n        fontWeight: 'bold',\r\n        transition: 'background-color 0.2s'\r\n    },\r\n    settingsLink: {\r\n        padding: '8px 15px',\r\n        backgroundColor: '#f4f5f7',\r\n        color: '#172b4d',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '3px',\r\n        textDecoration: 'none',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        transition: 'background-color 0.2s'\r\n    },\r\n    loading: {\r\n        padding: '20px',\r\n        fontSize: '18px',\r\n        color: '#5e6c84'\r\n    },\r\n    error: {\r\n        padding: '20px',\r\n        fontSize: '18px',\r\n        color: '#ff5630'\r\n    }\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,iBAAiB;AAC/D,SAASC,eAAe,QAAQ,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAW,CAAC,GAAGX,SAAS,CAAC,CAAC;EAClC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM;IAAE2B;EAAiB,CAAC,GAAGnB,eAAe,CAAC,CAAC;EAE9C,MAAMoB,UAAU,GAAG1B,WAAW,CAAC,YAAY;IACvCsB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMvB,iBAAiB,CAACQ,UAAU,CAACgB,WAAW,CAAC,CAAC,CAAC;MAClE,IAAID,QAAQ,CAACE,IAAI,EAAE;QACff,UAAU,CAACa,QAAQ,CAACE,IAAI,CAAC;QACzBb,QAAQ,CAACW,QAAQ,CAACE,IAAI,CAACd,KAAK,CAAC;QAC7BG,WAAW,CAACS,QAAQ,CAACV,QAAQ,CAAC;QAC9BG,UAAU,CAACO,QAAQ,CAACR,OAAO,CAAC;MAChC,CAAC,MAAM;QACHL,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D,CAAC,SAAS;MACNR,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhBb,SAAS,CAAC,MAAM;IACZ2B,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMM,eAAe,GAAGA,CAACC,CAAC,EAAEC,MAAM,KAAK;IACnCV,gBAAgB,CAACU,MAAM,CAAC;IACxBD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC5C,CAAC;EAED,MAAMG,cAAc,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAON,CAAC,EAAEO,SAAS,KAAK;IACvCP,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMJ,MAAM,GAAGD,CAAC,CAACE,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;IAC/CjB,gBAAgB,CAAC,IAAI,CAAC;IAEtB,MAAMkB,YAAY,GAAG3B,KAAK,CAAC4B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKX,MAAM,CAAC;IACrD,IAAI,CAACQ,YAAY,IAAIA,YAAY,CAACI,MAAM,KAAKN,SAAS,EAAE;;IAExD;IACAxB,QAAQ,CAAC+B,SAAS,IAAIA,SAAS,CAACC,GAAG,CAACJ,CAAC,IACjCA,CAAC,CAACC,EAAE,KAAKX,MAAM,GAAG;MAAE,GAAGU,CAAC;MAAEE,MAAM,EAAEN;IAAU,CAAC,GAAGI,CACpD,CAAC,CAAC;IAEF,IAAI;MACA,MAAMvC,UAAU,CAACO,UAAU,CAACgB,WAAW,CAAC,CAAC,EAAEM,MAAM,EAAE;QAAEY,MAAM,EAAEN;MAAU,CAAC,CAAC;MACzEf,gBAAgB,CAAC,QAAQS,MAAM,aAAaM,SAAS,GAAG,EAAE,SAAS,CAAC;IACxE,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDL,gBAAgB,CAAC,uBAAuBS,MAAM,qBAAqB,EAAE,OAAO,CAAC;MAC7E;MACAR,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,MAAMuB,aAAa,GAAGlC,KAAK,CAACmC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC9C,IAAI,CAACD,GAAG,CAACC,IAAI,CAACN,MAAM,CAAC,EAAE;MACnBK,GAAG,CAACC,IAAI,CAACN,MAAM,CAAC,GAAG,EAAE;IACzB;IACAK,GAAG,CAACC,IAAI,CAACN,MAAM,CAAC,CAACO,IAAI,CAACD,IAAI,CAAC;IAC3B,OAAOD,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,IAAI9B,SAAS,EAAE,oBAAOb,OAAA;IAAK8C,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EAAC;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/E,IAAI,CAAChD,OAAO,EAAE,oBAAOL,OAAA;IAAK8C,KAAK,EAAEC,MAAM,CAACzB,KAAM;IAAA2B,QAAA,GAAC,YAAS,EAAC7C,UAAU,CAACgB,WAAW,CAAC,CAAC,EAAC,eAAY;EAAA;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEpG,oBACIrD,OAAA;IAAK8C,KAAK,EAAEC,MAAM,CAACO,SAAU;IAAAL,QAAA,gBACzBjD,OAAA;MAAQ8C,KAAK,EAAEC,MAAM,CAACQ,MAAO;MAAAN,QAAA,gBACzBjD,OAAA;QAAI8C,KAAK,EAAEC,MAAM,CAACS,YAAa;QAAAP,QAAA,GAAE5C,OAAO,CAACoD,IAAI,EAAC,IAAE,EAACpD,OAAO,CAACqD,GAAG,EAAC,GAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGnErD,OAAA;QAAK8C,KAAK,EAAEC,MAAM,CAACY,OAAQ;QAAAV,QAAA,gBAEvBjD,OAAA,CAACN,IAAI;UAACkE,EAAE,EAAE,YAAYxD,UAAU,WAAY;UAAC0C,KAAK,EAAEC,MAAM,CAACc,YAAa;UAAAZ,QAAA,EAAC;QAEzE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEPrD,OAAA;UACI8C,KAAK,EAAEC,MAAM,CAACe,YAAa;UAC3BC,OAAO,EAAEA,CAAA,KAAM7D,iBAAiB,CAACG,OAAO,CAACqD,GAAG,EAAE/C,OAAO,EAAEO,UAAU,CAAE,CAAC;UAAA;UAAA+B,QAAA,EACvE;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACTrD,OAAA;MAAK8C,KAAK,EAAEC,MAAM,CAACiB,cAAe;MAAAf,QAAA,EAC7BxC,QAAQ,CAAC+B,GAAG,CAACF,MAAM,iBAChBtC,OAAA,CAACL,WAAW;QAERS,UAAU,EAAEA,UAAW;QACvBkC,MAAM,EAAEA,MAAO;QACf/B,KAAK,EAAEkC,aAAa,CAACH,MAAM,CAAC,IAAI,EAAG;QACnC2B,WAAW,EAAEzC,eAAgB;QAC7B0C,UAAU,EAAErC,cAAe;QAC3BsC,MAAM,EAAEpC;MAAW,GANdO,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClD,EAAA,CAlHIF,WAAW;EAAA,QACUR,SAAS,EAOHK,eAAe;AAAA;AAAAsE,EAAA,GAR1CnE,WAAW;AAoHjB,MAAM8C,MAAM,GAAG;EACXO,SAAS,EAAE;IAAEe,OAAO,EAAE,MAAM;IAAEC,eAAe,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAQ,CAAC;EAC9EhB,MAAM,EAAE;IACJiB,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAClB,CAAC;EACDnB,YAAY,EAAE;IAAEoB,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC;EAC7ClB,OAAO,EAAE;IACLa,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE,QAAQ;IACpBI,GAAG,EAAE;EACT,CAAC;EACDd,cAAc,EAAE;IAAEQ,OAAO,EAAE,MAAM;IAAEO,SAAS,EAAE,MAAM;IAAEC,aAAa,EAAE;EAAO,CAAC;EAC7ElB,YAAY,EAAE;IACVO,OAAO,EAAE,UAAU;IACnBC,eAAe,EAAE,SAAS;IAC1BO,KAAK,EAAE,OAAO;IACdI,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,MAAM;IAClBC,UAAU,EAAE;EAChB,CAAC;EACDxB,YAAY,EAAE;IACVQ,OAAO,EAAE,UAAU;IACnBC,eAAe,EAAE,SAAS;IAC1BO,KAAK,EAAE,SAAS;IAChBI,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBI,cAAc,EAAE,MAAM;IACtBF,UAAU,EAAE,MAAM;IAClBG,QAAQ,EAAE,MAAM;IAChBF,UAAU,EAAE;EAChB,CAAC;EACDrC,OAAO,EAAE;IACLqB,OAAO,EAAE,MAAM;IACfkB,QAAQ,EAAE,MAAM;IAChBV,KAAK,EAAE;EACX,CAAC;EACDvD,KAAK,EAAE;IACH+C,OAAO,EAAE,MAAM;IACfkB,QAAQ,EAAE,MAAM;IAChBV,KAAK,EAAE;EACX;AACJ,CAAC;AAED,eAAe5E,WAAW;AAAC,IAAAmE,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}